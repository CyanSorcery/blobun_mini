pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
 printh("Blobun Mini startup.")
 -- tile lut
 #include res/r_tile_lut.lua
 -- camera position
 g_cam_x, g_cam_y = 0, -8
 -- levels
 #include res/r_levels.lua

 g_fillp_diag = {0x936c, 0x36c9, 0x6c93, 0xc936}
 g_fillp_anim, g_wavy_anim = 0, 0

 g_player_blink = 5

 g_even_frame = false

 -- objects/hint arrows that are in the playfield
 g_object_list, g_arrow_list = {}, {}

 -- current level
 g_level_index = 1
 -- for level select
 g_level_select = g_level_index
 -- current level name
 g_level_name = "Unset"
 -- current level data
 g_level_data = {}
 -- current level size
 g_level_width, g_level_height = 1, 1

 -- how long the level table is
 g_level_arrlen = 1
 -- how many tiles the level has/been touched
 g_level_tiles, g_level_touched = 0, 0
 -- used for input buffering
 g_new_dir = -1
 -- used to detect when sprint has just been pressed
 g_btn4_held = false
 -- when the player has won, this is set
 g_level_win = false
 -- when the player has lost, this is set
 g_level_lose = false

 -- how many puzzle coins/octogems the player has
 g_puzz_coins, g_puzz_octogems = 0, 0
 -- if the player is on a conveyer/portal this turn
 g_puzz_on_convey, g_puzz_use_portal = false, false
 -- what turn the floor zappers are on. 012 = cmy
 g_puzz_zapper_turn, g_redraw_zappers = 0, true

 -- we need to redraw the coins blocks?
 g_redraw_coin = false

 -- table for objects we need to delete
 g_obj_delete = {}

 -- lookup table for water/lava shimmer
 g_shimmer_water = 0b1111000111110000.1110000111111000
 g_shimmer_offset = 0

 -- slime trail animation
 g_slime_trail_anim = 0

 -- undo queue
 g_undo_queue = {}

 -- when animating the bottom message, this is incremented
 g_bottom_msg_anim = 0

 -- particle table
 g_particles = {}

 -- unpack the first level
 unpack_level(g_level_index)

end


function _update()
 -- run fillp animation
 g_fillp_anim += 0.2
 g_fillp_anim %= 4
 -- update wavy factor
 g_wavy_anim += 0.035
 g_wavy_anim %= 1
 -- update blinking
 g_player_blink -= 1
 if (g_player_blink <= 0) g_player_blink = 30 + flr(rnd(60))

 g_even_frame = g_even_frame == false

 g_slime_trail_anim += 0.075
 g_slime_trail_anim %= 1

 g_bottom_msg_anim = mid(0, (g_level_win or g_level_lose) and g_bottom_msg_anim + 0.2 or g_bottom_msg_anim - 0.2, 1)

 -- process objects
 proc_objects()
 proc_particles()
end

function _draw()
 
 draw_gameplay()
 
--show sprite table
--palt(0, false)
--spr(0,0,0,16,16)
--palt()

end

-->8

-- this function unpacks the level to the top left corner of the map
function unpack_level(_index)
 -- clear the map to be ready for incoming data
 memset(0x2000, 0, 0x1000)
 -- reset the drawlist for the incoming elements
 g_object_list, g_arrow_list, g_undo_queue = {}, {}, {}
 g_level_tiles, g_level_touched, g_bottom_msg_anim, g_puzz_coins, g_puzz_octogems = 0, 0, 0, 0, 0
 g_redraw_coin, g_btn4_held, g_level_win, g_level_lose = true, false, false, false
 g_puzz_zapper_turn, g_redraw_zappers, g_particles = 0, true, {}
 -- clamp this output
 local _index = mid(1, _index, count(g_levels))
 -- store the level index
 g_level_index = _index
 g_level_select = _index

 -- add menuitems for this
 
 menuitem(1, "restart puzzle",
 function()
  unpack_level(g_level_index)
 end
 )
 menuitem(2, "skip puzzle",
  function()
   unpack_level(g_level_index + 1)
  end
 )
 
 -- debug function
 menuitem(3, "goto stage "..tostr(g_level_select),
  function(b)
   if (b&2 > 0) g_level_select += 1
   if (b&1 > 0) g_level_select -= 1
   g_level_select = mid(1, g_level_select, count(g_levels))
   menuitem(nil, "goto stage "..tostr(g_level_select))
   if (b&32) then
    unpack_level(g_level_select)
    return false
   end
   return true
  end
 )

 -- get the level data
 local _data = g_levels[_index]
 -- find out how long the title is
 local _title_len = tonum(sub(_data, 1, 1), 0x1)
 -- store the level name
 g_level_name = sub(_data, 2, 1 + _title_len)
 -- store the stage width
 _level_width = tonum(sub(_data, 2 + _title_len, 2 + _title_len), 0x1)
 g_level_width = _level_width
 -- get ready to parse the level data
 local _level_data = {}
 -- how long is our level data?
 local _offset = 3 + _title_len
 -- ashe note: we shouldn't need the 0x here, but for whatever reason it wont work without it
 local _data_len = tonum("0x"..sub(_data, _offset, _offset + 1, 0x1))
 g_level_height = (_data_len / g_level_width) >> 1
 -- read the data
 -- coco note: since we have to add 2 to the offset to get past the
 -- data length bytes, go ahead and save a call here by chaining it into the loop
 local _tile, _x, _y, _mod = 0, 1, 1, 0
 -- convert the level width to grid tile space, offset by one
 _level_width = (_level_width << 1) + 1
 for i=1,_data_len do
  _offset += 2
  _tile = tonum(sub(_data, _offset, _offset + 1), 0x1)
  _level_data[i] = _tile
  _mod = ((_x + _y) % 4 == 2) and 1 or 0
  -- now, read this out onto the playfield
  if (_tile > 0) then
   put_mirrored_tile(_x, _y, 16 + _mod)
  end
  -- move ahead in the tileset, moving to the next row as needed
  _x += 2
  if (_x >= _level_width) then
   _x = 1
   _y += 2
  end

 end
 -- pass it to the global var
 g_level_data = _level_data
 local _level_arrlen = count(_level_data)
 g_level_arrlen = _level_arrlen
 

 -- do the autotiling around the perimeter of the level
 local _tile, _mtl, _mtc, _mtr, _mcl, _mcc, _mcr, _mbl, _mbc, _mbr _xl, _xr, _yb = 0

 for _x=0,31 do
  -- set our left and right x, without going into the work area
  _xl, _xr = _x - 1, min(_x + 1, 31)
  -- re-initialize the top and center rows (assume they're 0)
  _mtl, _mtc, _mtr, _mcl, _mcc, _mcr = 0, 0, 0, 0, 0, 0
  for _y=0,31 do
   -- get the bottom row, without going into the work area
   _yb = min(_y + 1, 31)
   _mbl, _mbc, _mbr = mget(_xl, _yb), mget(_x, _yb), mget(_xr, _yb)

   -- don't do this unless the center tile is 0 since
   -- we can know in advance we wont put a tile on the puzzle floor
   if (_mcc == 0) then
-- figure out what each tile is gonna be
    _tile = calc_autotile(_mtl, _mtc, _mtr, _mcl, _mcc, _mcr, _mbl, _mbc, _mbr)
    -- place the tile into the work area?
    if (_tile > 0 and _tile < 15) mset(_x + 32, _y, _tile)
   end

   -- store these for the next row
   _mtl, _mtc, _mtr = _mcl, _mcc, _mcr
   _mcl, _mcc, _mcr = _mbl, _mbc, _mbr
  end
 end
 -- finally, copy the output data from the work area to the play area,
 -- while also clearing the work area for later usage
 for _x = 0,31 do
  for _y = 0,31 do
   -- copy the boundary from the work area over
   _tile = mget(_x + 32, _y)
   if (_tile > 0) mset(_x, _y, _tile)
   -- clear the work area
   mset(_x + 32, _y, 0)
  end
 end
 -- in the top right of the work area, mark all tiles as solid
 for _x=48,64 do
  for _y=0,16 do
   mset(_x, _y, 0)
  end
 end
 -- now, unpack the level data into the top left screen of the work area so we can read it easily
 -- get the level width data that we stored earlier
 _level_width = g_level_width
 _x, _y = 0, 0
 for i=1,_level_arrlen do
  _tile = _level_data[i]
  mset(_x + 32, _y, _tile)
  -- place a floor tile + allow collision here?
  -- note: 0 off means cant pass, 1 means can pass, 2 means slimed
  if (_tile != 0) then
   -- place free tile, may be overwritten below though
   mset(_x + 48, _y, 1)
   place_puzz_tile(_x, _y, _tile)
   g_level_tiles += 1
  end

  -- do we need to add objects to the object list?
  if (_tile == 33) player_create(_x, _y)
  -- puzzle keys
  for i=0,4 do
   if (_tile == 2 | (i << 5)) add(g_object_list, create_obj_key(_x, _y, i + 1, 83 + i))
  end
  
  -- state keys
  for i=0,2 do
   if (_tile == 8 | (i << 5)) add(g_object_list, create_obj_key(_x, _y, 5 + i, 230 + i))
  end

  -- arrows
  for i=0,3 do
   if (_tile == 17 | (i << 5)) add_hint_arrow(_x, _y, i)
  end

  -- octogem
  for i=0,7 do
   if (_tile == 15 | (i << 5)) add(g_object_list, create_obj_key(_x, _y, 8 + i, 87))
  end

  -- generic key
  if (_tile == 44) add(g_object_list, create_obj_key(_x, _y, 16, 159))

  _x += 1
  if (_x >= _level_width) then
   _y += 1
   _x = 0
  end
 end

 -- perform water/lava autotile
 calc_lava_water()

 -- slime where stephanie is at and record the first undo step
 player_end_move(g_object_list[1])
end

-- this places the graphical representation of the given tile
function place_puzz_tile(_x, _y, _tile_id)
 -- find the top left corner of the tile to place. if 0, do nothing
 local _offset = (_tile_id << 1) - 1
 local _tile_tl = tonum("0x"..sub(g_tile_lut, _offset, _offset+1))

 -- do we place a tile?
 if (_tile_tl != 0) then
  -- offset for cracked floors
  if (_tile_tl == 124 and (_x + _y) % 2 == 0) _tile_tl += 2
  -- figure out the map coordinates
  local _map_x, _map_y = (_x << 1) + 1, (_y << 1) + 1
  if (_tile_tl == 191 or _tile_tl == 207) then
   put_1x4_tile(_map_x, _map_y, _tile_tl)
  elseif (_tile_tl < 83) then
   put_mirrored_tile(_map_x, _map_y, _tile_tl)
  else
   put_x16_tile(_map_x, _map_y, _tile_tl)
  end
  -- block/unblock the playfield? -1: nothing, 0: block, 1: unblock
  local _state, _ele_id = -1, _tile_id & 0x1f
  if (_ele_id == 3 or _ele_id == 10) _state = 0 -- raised rgbc or ice block
  if (_ele_id == 4) _state = 1 -- lowered rgbc
  if (_state >= 0) mset(_x + 48, _y, _state)
 end
end

function calc_lava_water()
 -- note: this is similar to a function earlier in the code, see that for comments
 local _t = {176, 192}
 local _id, _id_m, _tile, _mtl, _mtc, _mtr, _mcl, _mcc, _mcr, _mbl, _mbc, _mbr _xl, _xr, _yb = 0
 local _w, _h = (g_level_width << 1) + 1, (g_level_height << 1) + 1
 for i=1,2 do
  _id = _t[i]
  _id_m = _id + 15
  for _x=0,_w do
   _xl, _xr = _x - 1, min(_x + 1, _w)
   _mtl, _mtc, _mtr, _mcl, _mcc, _mcr = 1, 1, 1, 1, 1, 1
   for _y=0,_h do
    _yb = min(_y + 1, _h)
    _mbl, _mbc, _mbr = (num_in_range(mget(_xl, _yb), _id, _id_m)) and 0 or 1,
       (num_in_range(mget(_x, _yb), _id, _id_m)) and 0 or 1,
       (num_in_range(mget(_xr, _yb), _id, _id_m)) and 0 or 1
    if (_mcc == 0) then
     _tile = calc_autotile(_mtl, _mtc, _mtr, _mcl, _mcc, _mcr, _mbl, _mbc, _mbr)
     -- place tile, optionally placing grid marker
     if (_tile > 0) mset(_x, _y, (_x % 2 == 0 and _y % 2 == 0 and _tile == 15) and _id or _id + _tile)

    end
    _mtl, _mtc, _mtr = _mcl, _mcc, _mcr
    _mcl, _mcc, _mcr = _mbl, _mbc, _mbr
   end
  end
 end
end

function calc_autotile(_mtl, _mtc, _mtr, _mcl, _mcc, _mcr, _mbl, _mbc, _mbr)
 local _tile = 0
 if (_mbl + _mbc + _mcl + _mcc == 0) _tile |= 1
 if (_mbr + _mbc + _mcr + _mcc == 0) _tile |= 2
 if (_mtr + _mtc + _mcr + _mcc == 0) _tile |= 4
 if (_mtl + _mtc + _mcl + _mcc == 0) _tile |= 8
 return _tile
end

-->8
-- for creating and processing objects

-- object table
-- 0: stephanie
-- 1: heart key
-- 2: diamond key
-- 3: triangle key
-- 4: coin key
-- 5: normal state
-- 6: fire state
-- 7: ice state
-- 8-15: octogems
-- 16: generic key

function proc_objects()

 -- fetch the object list
 local _obj_list = g_object_list
 local _obj_count, _dopart = count(_obj_list), true
 
 -- process each of the objects
 for i=1,_obj_count do
  _obj = _obj_list[i]
  _type = _obj.type
  
  if (_type == 0) then
   player_step(_obj)
  elseif (_obj.iskey) then
   -- puzzle key
   _obj.anim += 0.02
   _obj.anim %= 1
   _obj.spin += 0.035
   _obj.spin %= 1

  end
 end
 
 -- delete any objects marked for deletion
 local _poskey
 while (count(g_obj_delete) > 0) do
  _poskey, _obj_count = g_obj_delete[1], count(_obj_list)
  for i=1,_obj_count do
   if (_obj_list[i].pos == _poskey) then
    deli(_obj_list, i)
    break
   end
  end
  deli(g_obj_delete, 1)
 end
end


-- this adds a hint arrow on the floor
-- 0: right, 1: up, 2: left, 3: down
function add_hint_arrow(_x, _y, _dir)
 add(g_arrow_list, {
  dir=_dir,
  x=(_x << 4) + 12,
  y=(_y << 4) + 12
 })
end

-- this creates keys we can grab
function create_obj_key(_x, _y, _key, _spr)
 return {
    type=_key,
    iskey=true,
    x=(_x << 4) + 8,
    y=(_y << 4) + 5,
    pos=(_x << 4) | _y, -- positional key
    spr=_spr, -- our key sprite
    anim=rnd(1), -- animation offset
    spin=rnd(1), -- for rotating
 }
end



-->8
-- includes
#include scripts/s_draw.lua
#include scripts/s_util.lua
#include scripts/s_player.lua
#include scripts/s_particles.lua

__gfx__
0000000000000000000000000000000002882077288207770288207702882077777028827770288277702882777028827777777777777777777777777eeccee7
000000002222222101222222222222220288207728820777028820772288207777702882777028827770288277702882777777777777777777777777eeccee77
000000008888888202888888888888880288200088820000028820778888207700002882777028820000288877702888000000007777700000007777eccee77e
000000008888888202888888888888880288222288821222028820778888207722222882777028822221288877702888222222227777022222220777ccee77ee
000000002222288202882222222222220288888822222888028820772222207788888882777028828882222277702222888888887770288888882077cee77eec
000000002222288202882112222222220288888822212888028820772222207788888882777028828882122277702222888888887770288888882077ee77eecc
000000002222288202882111222222220122222222102882028820772222107722222221777028822882012277701222222222227770288222882077e77eecce
00000000000028820288200000000000000000000000288202882077000007770000000077702882288200007777000000000000777028820288207777eeccee
55555551444444415555555066666650555555509999994044444440aaaaaa4044444440bbbbbb3033333330ccccccd022222220555555502222222022222220
5555555544444444111111550000066055555555000009904444444400000aa04444444400000bb03333333300000cc022222222dddddd558888882244444422
55555555444444445555551522222065000005553333309400000444555550a400000444444420b300000333222220cd00000222555555d52222228222222242
5555555544444444155555152882226511111055b333339411111044cccc55a411111044444442b355551033e22222cd11111022d55555d58222228242244242
5555555544444444515555158888226512211155bb33339431111144cccc55a4dddd1144000002b355555133ee2222cd21111122dd5555d58828828244244242
5555555544444444151555158888226522221155bbb3339433111144ccc055a4dddd1144444422b300000133ee2222cd22111122dd5555d58828828244222242
5555555544444444115155158888226522221155bbbb339433311144ccc555a4ddd01144444442b355551133eee222cd22111122dd5dd5d58822228244244242
5555555544444444111515158880226522221155bbb0339433331144cc0555a4ddd11144000002b355555133eee222cd22211122d55dd5d58222228242244242
5555555544444444115155158802226522201155bb03339433301144cc5555a4dd011144444422b300000133eeee22cd22211122555555d52222228222222242
5555555544444444151555158022226522011155b033339433011144c05555a4dd111144444442b355551133eee022cd22221122d55555d58228828242244242
5555555544444444515555150222266520111155033339943011114405555aa4d011114400000bb35555513300022ccd22201122dd5555d58828828244244242
55555555444444441555551566666655011111559999994401111144aaaaaa4401111144bbbbbb3300000133ccccccdd00011122d55555d58222228242222242
55555555444444445555551566665505111115559999440411111444aaaa440411111444bbbb330311111333ccccdd0d11111222555555d52222228222222242
55555555444444441111115566666650555555559999994044444444aaaaaa4044444444bbbbbb3033333333ccccccd022222222dddddd558888882244444422
55555551444444415555555166666555555555519999944444444441aaaaa44444444441bbbbb33333333331cccccddd22222221555555512222222122222221
11111110111111101111111011111110111111101111111011111110111111101111111011111110111111101111111011111110111111101111111011111110
111111101111111011111110666666d02222222033333330ddddddd0444444402222222022222220222222202222222022222220222222202222222022222220
666666616666666100000001000006602222222233333333dddddddd444444441122222211222222112222221122222211222222112222221122222211222222
0006666655566666111111015555506d2222222233333333dddddddd114444442212222222122222121222222212222222122222221222221212222222122122
00000ddd5dd55ddd000011010055556d21122222133333331111dddd441144442212222222122222111222221212222212122222121222221112222212121112
000000dd5dddd5dd000001010005556d1221222231333333dddd1ddd444414442221222212212222122122221121222211212222112122221221222211212122
000000dd5dddd5dd000000010005556d2222122233133333dddd1ddd444414442221222211212222222122221221222212212222122122222222222212212222
0000000d5ddddd5d00000001000555602222122233313333ddd1dddd444441442222122212221222122212222222122222121222221212221222122222121222
0000000d5ddddd5d00000001005555602222122233331333ddd1dddd444441441222122222221222112212221222122221111222211112221121112221111222
0000000d5ddddd5d00000001005555602221222233313333dd1ddddd444441441122212222222122122221221122212222122122221221221222122222122122
0000000d5ddddd5d00000001000555602212222233133333dd1ddddd444414441222212212222122222221221222212222222122222221222222212222222122
0000000d5ddddd5d000000015555566d2122222231333333d1dddddd444414442222221211222212122222122221221222221212122212121222121212221212
000000dd5dddd5dd00000001666666dd12222222133333331ddddddd441144442222221212222212112222122211121222211112112111121121111211211112
000000dd5dddd5dd000000010066dd0d2222222233333333dddddddd114444442222221222222212122222122221221222221212122212121222121212221212
00000ddd5dd55ddd00000001066666d02222222233333333dddddddd444444441111112211111122111111221111112211111122111111221111112211111122
00066666555666661111111000666ddd2222222133333331ddddddd1444444412222222122222221222222212222222122222221222222212222222122222221
66666661666666610000000011111110111111101111111011111110111111101111111011111110111111101111111011111110111111101111111011111110
33333330ddddddd02222222000000000000000000000000000000000000000000011111111111110001111111111111000111111111111100011111111111110
11133333dddddddd1222222200007700000000070077777700000077000000070188888888888881013333333333333101ddddddddddddd10144444444444441
11113333dd55dddd11222222000788700000007b07cccccc000077990000007e08a222aa29988888033333bb1aa111a30ddddd66666ddddd0444449999944444
11113333d5555ddd1112222200788887000007bb07cccccc00079999000007ee0822aa22222998880333bb11111aa1130ddd661111166ddd0444991111199444
1113333355555ddd111122220788828800007bb307cc122200799944000007ee082a220000000988033b000000011a130dd61100000116dd0449110000011944
111133335555dddd11111222078822280007bb33007cc2220079944400007ee2082a000000000988033b000000000a130dd60000000006dd0449000000000944
11113333555555dd1111122207882222007bb333007cc1220799444400007ee208a200000000009803b00000000001a30d6100000000016d0491000000000194
111113335555555d111111220788122207bb33330007cc22079944440007ee2208a000000000009803b00000000000a30d6000000000006d0490000000000094
111113335555555d111111220078822207bb13330007cc12079944440007ee22082000000000009803b00000000000130d2000000000006d0490000000000024
11111133555555dd1111112200788122007bb13300007cc207991444007ee222089000000000009803b00000000000b30da000000000006d04900000000000a4
111111335555dddd11111222000788120007bb1300007cc100799144007ee222089000000000009803b00000000000b30da000000000006d04900000000000a4
1111111355555ddd111112220000788100007bb1000007cc0079991107ee11110889000000000988033b000000000b330d2a0000000006dd0449000000000a24
11111113d5555ddd1111222200000788000007bb000007cc0007999907eeeeee0889000000000988033b000000000b330d2a0000000006dd0449000000000a24
11111133dd55dddd11222222000000780000007b0000007c00007799007eeeee08889900000998880333bb00000bb3330d22aa0000066ddd04449900000aa224
33333331ddddddd12222222100000007000000070000000700000077000777770888889999988888033333bbbbb333330da222aa266ddddd044444992aa222a4
11111110111111101111111000000000000000000000000000000000000000000188888888888881013333333333333101ddddddddddddd10144444444444441
00d15155555551d000ddddddddddddd000d15555555151d000ddddddddddddd00577777777777775006666666666666001555155555515510144424444442441
0dd15155555551dd0ddddddddddddddd0dd15555555151dd0ddddddddddddddd07dd6776dd67777706ddd666dddd666605555111555515510444422244442442
0dd15155555551dd01111111111111110dd15555555151dd011111111111111107d6776dd677777706dd666dddd6666605555155155155150444424424424424
0dd15155555551dd05555555555555550dd15555555151dd0555555555555555076776dd6777776706d666dddd66666605551155511551550444224442244244
0dd15155155551dd05555555155555550dd15555155151dd011111111111111107776dd6777776d706666dddd66666d601115515515115550222442442422444
0dd15155115551dd05555551115555550dd15551155151dd05555555555555550776dd6777776dd70666dddd66666dd605515551155515550442444224442444
0dd15155111551dd05555511111555550dd15511155151dd0555555555555555076dd6777776dd67066dddd66666ddd605515515155511550442442424442244
0dd15155111151dd05555111111155550dd15111155151dd055551111111555507dd6777776dd67706dddd66666dddd605551155511515110444224442242422
0dd15155111551dd05555555555555550dd15511155151dd055555111115555507d6777776dd677706ddd66666dddd6601551555555155550244244444424444
0dd15155115551dd05555555555555550dd15551155151dd0555555111555555076777776dd6776706dd66666dddd66605151555511155110424244442224422
0dd15155155551dd01111111111111110dd15555155151dd055555551555555507777776dd6776d706d66666dddd666605511151155151550442224224424244
0dd15155555551dd05555555555555550dd15555555151dd055555555555555506777777777777760666666dddd666d605515515555515550442442444442444
0dd15155555551dd01111111111111110dd15555555151dd01111111111111110766666666666667066666dddd666dd605515511155551550442442224444244
0dd15155555551dd0ddddddddddddddd0dd15555555151dd0ddddddddddddddd076666666666666706666dddd666ddd605155155515551550424424442444244
01d15155555551d101ddddddddddddd101d15555555151d101ddddddddddddd10677777777777776076666666666666701555155515515510144424442442441
00111111111111100011111111111110001111111111111000111111111111100055555555555550007777777777777000111111111111100011111111111110
00dddddd000ddddd2110101121101011211010112110101121101011211010110007700000000000000000000000000055555550222222202222222000000000
00dddddd000ddddd10000000100000001000000010000000100000001000000007777770000770000000000000000000dddddd55888888224444442200777700
000ddddd0000dddd12220444122204441222040412220444122204441222044407777770007777000007700000000000555555d5222222822222224207567770
000ddddd0000dddd02020004020200040202040402020400020204000202000477777777077777700077770000077000d55555d5822222824224424275677777
0000dddd000000dd12220444122200441222044412220444122204441222000477777777077777700077770000077000dd5555d5882882824424424276700777
000000dd0000000000020400000200040002000400020004000204040002000407777770007777000007700000000000dd5555d588288282442222427d700767
000000000000000010020444100204441002000410020444100204441002000407777770000770000000000000000000dd5dd5d588222282442442427dd77657
000000000000000010000000100000001000000010000000100000001000000000077000000000000000000000000000d55dd5d5822222824224424207dd6570
000017002110101121101011211010112110101121101011211010112110101100000000000000000000000000000000555555d5222222822222224200755700
000013001000000010000000100000001000000010000000100000001000000007000070000700000000000000000000d55555d5822882824224424200756770
000031001222004012220444122204441222040412220444122204441222044400700700000770000070070000070000dd5555d5882882824424424200766567
000000000202004002020004020200040202040402020400020204000202000400077000007777700007700000000700d55555d5822222824222224200766d67
000000001222004012220444122200441222044412220444122204441222000400077000077777000007700000700000555555d5222222822222224200765770
000000000202004002020400020200040202000402020004020204040202000400700700000770000070070000007000dddddd558888882244444422007d6700
00000000120200401202044412020444120200041202044412020444120200040700007000007000000000000000000055555551222222212222222100077000
00000000100000001000000010000000100000001000000010000000100000000000000000000000000000000000000011111110111111101111111000000000
444444440000000000000000aaaaaaaa0aa94444aa9944440aa94444aa994444444449aa444449aa444449aa444449aa44444444444444444444444444444444
44444444aaaaaaa000aaaaaaaaaaaaaa0aa94444a99944440aa94444a9994444444449aa444449aa4444499a4444499a44444444444444444444444444444444
44444444aaaaaaaa0aaaaaaa999999990aa99444999444440aa9944499944444444499aa444499aa444444994444449944444444444444444444444444444444
4444444499999aaa0aaa9999449999940aa99944444444440aa9944444444444444999aa444499aa444444444444444444999994444444444444444444444444
44444444444999aa0aa99944444444440aaa9999444444990aa994444444444499999aaa444499aa999444444444444499999999444444999994444444444444
44444444444499aa0aa99444444444440aaaaaaa444449990aa9944444444444aaaaaaaa444499aaa999444444444444aaaaaaaa44444999a999444444444444
44444444444449aa0aa944444444444400aaaaaa4444499a0aa9444444444444aaaaaaa0444449aaaa99444444444444aaaaaaaa4444499aaa99444444444444
44444442444449aa0aa944444444444400000000444449aa0aa944444444444400000000444449aa0aa944444444444400000000444449aa0aa9444444444444
cccccccc000000000000000077777777077ccccc77cccccc077ccccc77cccccccccccc77cccccc77cccccc77cccccc77cccccccccccccccccccccccccccccccc
cccccccc777777700077777777777777077ccccc7ccccccc077ccccc7ccccccccccccc77cccccc77ccccccc7ccccccc7cccccccccccccccccccccccccccccccc
cccccccc7777777707777777cccccccc077ccccccccccccc077ccccccccccccccccccc77cccccc77cccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccc7770777cccccccccccc077ccccccccccccc077ccccccccccccccccccc77cccccc77cccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccc77077ccccccccccccc0777cccccccccccc077cccccccccccccccccc777cccccc77cccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccc77077ccccccccccccc07777777cccccccc077ccccccccccccc77777777cccccc777ccccccccccccccc77777777ccccccc77ccccccccccccccc
cccccccccccccc77077ccccccccccccc00777777ccccccc7077ccccccccccccc77777770cccccc7777cccccccccccccc77777777cccccc7777cccccccccccccc
ccccccc7cccccc77077ccccccccccccc00000000cccccc77077ccccccccccccc00000000cccccc77077ccccccccccccc00000000cccccc77077ccccccccccccc
000000003bbbbbbbbbbbbbb3800000088bbbbbb88bbbbbb80000000000000000000000008033000883bbbbb88bbbbbb884999998899999988d66666886666668
000000003bbbbbbbbbbbbbb30800008038bbbb8bb8bbbb8300000000000000000000000008bb308038b77787b8bbbb8b489aaa8a98999989d867778768666686
00033333bbbbbbbbbbbbbbb300833833bb8bb8bbbb8bb8b30000111003711100000010003b8bb8003b8778bbbb8bb8bb498aa89999899899d687786666866866
03bbbbbb33bbbbbbbbbbbb3003b88bbb33b88bbbbbb88b300001313137711310000001003b3883003b788bbbbbb88bbb49a8899999988999d678866666688666
3bb333333bbbbbbbbbbbbb303bb883333bb88bbbbbb88b300030311137731110000001003b3883003b788bbbbbb88bbb49a8899999988999d678866666688666
3b3333bbbb33bbbbbbbbb3003b8338bbbb83b8bbbb8bb8000000777003777700000013003b83b8003b8bb8bbbb8bb8bb4989989999899899d686686666866866
03bbbbb3330033bbbbb3300008bbbb833800338bb8b3308000000000000000000000000038b3b380387bbb8bb8bbbb8b48a9998998999989d876668668666686
00333330000000333330000080333338800000388330000800000000000000000000000083b3b3088bbbbbb88bbbbbb889999998899999988666666886666668
13bbbbbbbbbbbbb324999999999999945d6666666666666500000777000000070000077083b33b388bbbbbb88bbbbbb889999998899999988666666886666668
3bb77777bbbbbbbb499aaaaa99999999d667777766666666000073330000007400007dd708bb3b8b38bbbb8bb8bbbb8b4899998998999989d866668668666686
3b7777bbbbbbbbbb49aaaa9999999999d67777666666666600073bbb000007490007d66d008bb8bb3b8bb8bbbb8bb83b4989989999899849d6866866668668d6
3b77bbbbbbbbbbbb49aa999999999999d67766666666666600073bbb00007499007d666600388bbb3bb88bbbbbb8833b4998899999988449d668866666688dd6
3b77bbbbbbbbbbbb49aa999999999999d677666666666666000073bb00074999007d666603b88bbb3bb88bbbbbb8833b4998899999988449d668866666688dd6
3b7bbbbbbbbbbbbb49a9999999999999d676666666666666000073bb00749999007dd666038bb8bb3b8bb8bbbb8338bb4989989999844899d6866866668dd866
3b7bbbbbbbbbbbbb49a9999999999999d67666666666666600073bbb0749999907d6666638bbbb8b18bbbb8bb8bbbb832899998998999984586666866866668d
3bbbbbbbbbbbbbbb4999999999999999d66666666666666600073bbb074999997d6666668bbbbbb88133333883333338824444488444444885ddddd88dddddd8
3bbbbbbbbbbbbbbb4999999999999999d6666666666666660073bbbb749999997d6666668bbbbbb8000173100000170000000170000000007777777777777777
3bbbbbbbbbbbbb3b4999999999999949d6666666666666d60073bbbb7499999907d6666638bbbb8b000013100000310000000310000000007777177777711777
3bbbbbbbbbbbbb3b4999999999999949d6666666666666d6073bbbbb07499999007dd6663b8bb8bb000311000000100000000010000000007777117777111177
3bbbbbbbbbbbb33b4999999999999449d666666666666dd6073bbbbb07499999007d666603b88bbb000130000000000000007100000000007111111771111117
3bbbbbbbbbbb333b4999999999994449d66666666666ddd673bbbbbb00749999007d666603b88bbb000000000000000000007000000000007111111777711777
3bbbbbbbbb3333bb4999999999444499d666666666dddd6673bbbbbb000744990007d66d008bb8bb000000000000000000000000000000007777117777711777
13bbbbbbbbbbbbb324999999999999945d6666666666666d073333330000774400007dd708033b8b000000000000000000000000000000007777177777711777
1133333333333331224444444444444255ddddddddddddd500777777000000770000077080000338000000000000000000000000000000007777777777777777
__gff__
0001010101010101010101010101010181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181818181000000000000000000000000008181810000000000000000000000000001010101010101010808080801010101
0101010101010101080808080101010100010101010101010101010101010101000101010101010101010101010101010404040404040404040404040404040404040404040404040404040404040404000000000000000000000202020202020202020202020000000002020202020202020202020200000000000000010000
__map__
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000e00002305500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01230000231551a1251f155171251a1551f1552315526155241551d12521155181251d155000001f15521155231551a1251f155171251a1551f15523155261552715520125241551b12520155007001f15521155
01230000070552b0000e0550b05507055076050e0552b00005055090550c0550905505055090550c0550000007055076050e0550b055070550b0550e05500000080550c0550f0550c055080550c0550f05500000
012300201343517432326150e435134351743232615134351143515432326150c435114351543232615114351343517432326150e4351343517432326150e4351443518432326150f43514435184323261511435
01230000231551a1251f15517125000001f1552315526155241551d125211551812500000000001f15521155231551a1251f155171252315500000241552615527155201252c1551b12500000000002435526355
0123000027355273252435524325380350e033273552435526355263252335523325370350e033263552335524355203551d35520355243550e033273552435526355263252335523325370350e0332435526355
012300000805508055326150305508055080553261505055070550705532615020550705507055326150205505055050553261508055050550505532615020550705507055326150b05507055070553261502055
01230000145351b5322c12518535145351b5323012518535135351a5322b12517535135351a5322f125175351153518532291251453511535185322c12515535135351a5322b1251a5351f5351a5322f12513535
0123000027355273252435524325380350e033273552435526355263252335523325370350e0331f3552335524355203551d35520355243550e033273552435526355263252b3552b325263550e0331f15521155
01230000070550e033326150e0550b0550e0333261507055050550e0333261509055050550e0333261502055070550e033326150e0550b0550e0333261507055080550e033326150f0550c0550e0333261508055
0123000013536175261a5161f50613516175261a5361f54611536155261a5161d50611516155261a5361d54613536175261a5161f50613516175261a5361f54614536185261d5162050614516185261d53620546
01230000143161b3262033624326143161b3162030624306173161a3261f33623326173161a3161f3062330614316183261b3362032614316183161b3062030613316173261a3361f32613316173161a3061f306
0123000027355273252435524325380350e03327355243552b3552b3252635526325370350e03324355263552735527325243552432529355293252635526325233552332526355263252b3552b3252b1552d155
012300002f15507605261552b1552f1550e6332d1552b1552d155000002a15500000000000e6332a1552b1552d155000002a15500000000000e6332b1552d1552f155000002b15500000000000e6332415526155
0123000028155000002415526155281550e633261552415526155000002b155000002f1550e633000000000030155000002f1552d1552f1550e6332b1552a1552b1550000026155000002b1550e6332b2552a255
0123000028255000002425526255282550e633262552425526255000002b255000002f2550e6332a1552b1552d155000002a2552b2552d2550e6332b1552a1552b155000002f255000002b1550e6331f15521155
01230000070550b0553261502055070550b055326150705506055090553261501055060550905532615010550605509055326150105506055090553261501055070550b0553261502055070550b0553261502055
012300000405507055326150005504055070553261504055020550705532615070550b0550705532615070550505509055326150005505055090553261505055070550b0553261502055070550b0553261507055
012300000e33613326173161a31613435174351a4351f4350d3361232615316193161e4351943515435124350d3361232615316193160d4351243515435194350e33613326173161a316234351f4351a43517435
012300000c336103261331618316244351f4351c435184350b3360e3261331617316234351f4351a43517435093360c3261231615316184351e435214351e4350b3360e32613316173161a4351f435234351f435
011200001d1501d155211501f15021150211551d1501d1551b1501b1551f1501f1501f155001001b1501b1551d1501d155211501f15021150211551d1501d1551c1501b1501a1501915018150181501815018155
011200001d1501d155211501f15021150211551d1501d1551b1501b1551f1501f1501f155001001b1501b1551d1501d155211501f15021150211551d1501d1551f15021150221502315024150241502415024155
011200002615026155291502815029150291552615026155241502415529150291502915500100241502415522150221552615024150261502615522150221552115021150221502215523150231502415024155
011200002615026155291502815029150291552b1502b1552d1502d1552915029150291550010025150251552615026155291502815029150291552b1502b1552915029150291502915229152291550010000100
01120000110501c5001d1341d1350c0500000018134181350f050000001b1341b1350a05000100161341613511050000001d1341d1350c0500000018134181350a0500000016134161350f050000001b1341b135
011200000e0500e0002e32532325110500e0002e325323250c050110002d3253032511050110002d325303250a0500a0002b3252e325110500e0002b3252e3251505015000293252d325110500c000303252d325
011200000e050000002e3253232511050000002e325323250c050000002d3253032511050000002d3253032513050000002e3253232510050000002e32532325110500000035325303250c050000002d3252b325
01120000290252d0253002030025290252d0253002030025270252b0252e0252b025270252b0252e0202e025290252d0253002030025290252d0253002030025270252b0252e0252b025270252b0252e0252b025
011200001a5361d53622526265161d145221452614522145185361d53621526245161d145211452414521145165361a5361d526225161a1451f145221451f14515536185361d52621516181451d1452114524145
011200001a5361d53622526265161d145221452614522145185361d53621526245161d14521145241452114511536165361a5261d5161d1452214526145221451153615536185261d5162414522145211451f145
010e00100e0501a5051a5501a5551a5501a555000001a5501a5551a5501a5551c5501a5501a555155501555500000000000000000000000000000000000000000000000000000000000000000000000000000000
010e0000211502115021150211502115221152211522115221152211522115221152211522115521100211001e1001f1001e1501f15021150211551e1501f15021150211551e1501f15021150211551e1501e155
010e00000e0501a20517550175551755017555000001755017555175501755519550175501755513550135550e0501a205165501655516550165550000016550165551655016555165501a5501a5551c5501c555
010e00001f1501f1501f1551e1501e1501e155171501715017152171521715217152171521715500000000001615016150161551a1501a1501a1551f1501f1501f1521f1521f1521f1551f1501f1501f1521f155
010e0000211502115021150211502115021150211522115221152211522115221152211522115500000000002315023150231552115021150211551e1501e155211502115021150211551e1501e1501e1501e155
010e0000213502135021350213502135021350213522135221352213522135221352213522135200000000001e300000001e3501e355213502135523350233552535025355263502635525350253552135021355
010e00002335023350233552135021350213551a3501a3501a3501a3501a3521a3521a3521a355000000000023350233502335521350213502135519350193501935219352193521935525350253502535025352
010e00002335023350233552535025350253552635026350263502635226352263522635226355000000000025350253502535526350263502635528350283502835228352283522835525350253502535025355
010e00002325023250232551f2501f2501f2551a2501a2501a2501a2501a25500200232502325023250232552125021250212551e2501e2501e25519250192501925019252192521925219252192550020000200
010e00002125021250212551e2501e2501e2551925019255212502125021250212552525025250252502525523250232502325525250252502525526250262502625026250262522625226252262550000000000
010e00002625026250262552325023250232552625026250262502625226252262522625226255000000000025250252502525526250262502625528250282502825028252282522825228252282550000000000
010e0000262502625026255282502825028255292502925029252292522925529200292502925029250292552d2502d2502d2522d2522d255000002e2502d2502b2502b2502b2522b2022b2502b2502b2502b252
013810002d0502d0502d0522d0552a0502a0502a0522a055260502605026052260552105021050210522105500000000000000000000000000000000000000000000000000000000000000000000000000000000
01460000231551f1551a1552315524155211551d15500000231551f1551a1552615527155241552015500000231551f155000002315524155211550000021155231551f1552315526155271552c1550000000000
01230020070552b5550e0552b555070552b5550e0552b55505055295550c0552955505055295550c05529555070552b5550e0552b555070552b5550e0552b555080552c5550f0552c555080552c5550f0552c555
014600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 14181b44
00 15181b44
00 16191c44
02 171a1d44
01 01020344
00 04020344
00 05060744
00 08060744
00 01090a44
00 04090a44
00 05060b44
00 0c060b44
00 0d101244
00 0e111344
02 0f111344
01 1f1e4344
00 21204344
00 221e4344
00 21204344
00 23424344
00 24424344
00 25424344
00 26424344
00 27424344
00 28424344
00 29424344
02 2a1e4344
00 2b2c0344
00 2d2c0344

